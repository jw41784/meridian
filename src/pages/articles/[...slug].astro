---
import BaseLayout from '../../layouts/BaseLayout.astro';
import TableOfContents from '../../components/TableOfContents';
import { getCollection, type CollectionEntry } from 'astro:content';
import { getReadingTime } from '../../utils/readingTime';

export async function getStaticPaths() {
  const articles = await getCollection('articles');
  return articles.map((article) => ({
    params: { slug: article.slug },
    props: article,
  }));
}

type Props = CollectionEntry<'articles'>;

const article = Astro.props;
const { Content } = await article.render();
const readingTime = await getReadingTime(article);

const formattedDate = new Date(article.data.publishDate).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

// Show TOC for articles longer than 5 minutes
const showTOC = readingTime.minutes > 5;
---

<BaseLayout 
  title={article.data.title}
  description={article.data.description}
  image={article.data.image?.src}
>
  <article class="container py-12">
    <header class="mb-8 text-center max-w-4xl mx-auto">
      <h1 class="text-4xl font-bold mb-4 dark:text-gray-100">{article.data.title}</h1>
      
      <div class="flex items-center justify-center gap-4 text-sm text-meridian-steel dark:text-gray-400 mb-4">
        <span>{article.data.author}</span>
        <span>•</span>
        <time datetime={article.data.publishDate.toISOString()}>
          {formattedDate}
        </time>
        <span>•</span>
        <span>{readingTime.text}</span>
      </div>
      
      <div class="flex flex-wrap gap-2 justify-center">
        {article.data.tags.map((tag) => (
          <a href={`${import.meta.env.BASE_URL}tags/${tag}`} class="tag">
            {tag}
          </a>
        ))}
      </div>
    </header>
    
    {article.data.image && (
      <img 
        src={article.data.image.src} 
        alt={article.data.image.alt}
        class="w-full max-w-4xl mx-auto rounded-lg shadow-lg mb-8"
      />
    )}
    
    <div class="relative">
      {showTOC && (
        <>
          {/* Desktop TOC - sticky sidebar */}
          <aside class="hidden xl:block absolute -left-64 top-0 w-56">
            <div class="sticky top-24 p-4 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700">
              <TableOfContents client:idle />
            </div>
          </aside>
          
          {/* Mobile TOC - collapsible at top */}
          <details class="xl:hidden mb-8 p-4 bg-gray-50 dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700">
            <summary class="cursor-pointer font-semibold text-meridian-burgundy dark:text-meridian-steel">
              Table of Contents
            </summary>
            <div class="mt-4">
              <TableOfContents client:load />
            </div>
          </details>
        </>
      )}
      
      <div class="prose prose-lg mx-auto max-w-4xl prose-gray dark:prose-invert">
        <Content />
      </div>
    </div>
  </article>
</BaseLayout>